24.10.2. 개발시작

	- git init
	- 설계
	- UI 디자인 : 첫화면, 목차

24.10.3.
	- UI 디자인 완료

	- 입력창 UI 세부 조건
	페이지 넘어가면 이전 타수 저장하고 입력할 때 다시 측정
		: 페이지 수 만큼 타수 저장, 타수 평균 반환
		: 타수, 정확도, 걸린 시간 - 위로 스크롤 가능

	- 목차, Swiper 적용
	**Error, swiper 적용 시 문자열 css, module css 불러오는 className 유의
	->> "swiper-wrapper" 생략하면 다음 에러 발생, TypeError: Failed to execute 'getComputedStyle' on 'Window': parameter 1 is not of type 'Element'.

24.10.4.
	- 초기화면 UI 구현
	: UX 개선 - swiper 배제, 목록 넘김 정적 이동

	- 목록 데이터 구조 설계
	[
		{
			trackId: 음악ID,
			currentRank: 순위,
			trackTitle: 음악제목,
			artists: 아티스트 목록,
			lyric: ID_API - response.result.lyric.normalLyric.text('\n' 따라 줄바꿈),
			albumGenres: 장르,
			imageUrl: 앨범사진 링크,
		}
	]

	- 공통 레이아웃 작업: _app

	- 목업 데이터 생성: top100.json, musicList.json

	- 입력창 UI 작업
	: 음악제목, 아티스트, 가사
		- 가사
		: 화면 높이에 따라 페이지 줄 수 자동 조정 - 다음 페이지로 넘김 
		->>	추후 반응형

		- 가사 배열
		: 작성 완료하면 객체의 다음 요소 - 다음 페이지 나옴
		29, 34, 34, ... - 하나의 객체에 저장
			첫 페이지면 가사 29줄 부여,
			다음 페이지부터 가사 34줄 부여, 
			페이지 작성 완료하면 배열 인덱스 증가
		**다음 페이지 렌더링 할 때 함수 재실행 되어 가사 페이지 수 증가**
		->> useMemo 사용 해결

		- 가사 입력
		input 숨기고 입력할 때 문자 비교
			onChange: 첫 배열, 첫 요소 비교
			spacebar: 넘어감
			enter: 다음 배열 문장, 이전 비교 요소 삭제

		문자 요소 필요, 비교 결과 문자에 className 부여, 
			틀리면 빨강 맞으면 검정 지우면 회색
			엔터 누르면 다음 줄 이동(다 적어야 사용 가능)

24.10.7.
		- 입력창 UI 
			- 가사 입력
				onChange: 문자 입력, 기존 문자와 입력한 문자 비교, CSS 부여
				enter: 다음 문자열 입력 
					작성 배열 변수에 입력한 문자열 삽입
					onChange 초기화
					작성 배열 문자열과 기존 문자열 일치 판별, CSS 부여

				- input focus 
					label 연동

		- 결과창 UI 
			isFinished 변수가 true이면 결과창 띄움, 아니면 입력창 띄움 
			reducer, context 활용 결과 계산

24.10.8.
	- 입력창 UI
		: 작성한 문장 수가 기존 현재 페이지 문장수와 동일하면 
			다음 페이지 이동, pageSheetIdx 증가 
			totalSentenceArr에 sentenceArr 객체로 할당
			sentenceArr 초기화

	- 결과창 UI
		- 다시하기
			계산하면 totalSentenceArr 초기화(기존 메모리 유지 방지), 다시하기 누르면 결과값 초기화

	- 테스트 코드 작성 : <Letter />
		: Jest 설치, 사용방법, 초기설정, 코드작성

24.10.10.
	- npm run dev 오류 해결
		**Disabled SWC as replacement for Babel because of custom Babel configuration "babel.config.js"
		->> next.config.js 파일, 변수 추가

	- sentence 컴포넌트 세분화
		: <textInput />, <lyric_li />

	- 테스트코드 작성
		: <textInput />, <lyric_li />

	- jest 활용 정리

24.10.11.
	- [id] 컴포넌트 세분화
		:	<ResultPage />, <Sentence />

	- 테스트코드 작성
		: <Sentence /> <ContentList /> <CreateSwiper /> <ResultPage />

<--- 테스트 코드 작성 : <[id] /> --->